---
apiVersion: apps/v1
kind: Deployment

metadata:
  name: {{ .Values.name }}-deployment
  namespace: {{ .Values.namespace }}
  labels:
    role: git2consul

spec:
  selector:
    matchLabels:
      pod: git2consul

  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      name: {{ .Values.name }}-pod
      labels:
        pod: git2consul

    spec:
      # Preparing environment before service containers start
      # use shared workspace: /workdir
      initContainers:
        # scan github hostname for git2consul
        # store known_hosts in /workdir
        # /workdir will be mounted at runtime
      - name: scan-github
        image: centos
        command: ["/bin/sh"]
        args: ["-c","yum install openssh-clients -y; ssh-keyscan github.com > /workdir/known_hosts; echo \"$SSH_KEY\" > /workdir/lb_dev; cat /workdir/lb_dev"]
        volumeMounts:
        - name: workdir
          mountPath: "/workdir"
        env:
        - name: "SSH_KEY"
          valueFrom:
            secretKeyRef:
              name: ssh-key
              key: lb_dev

        # git2consul take config.json as input
        # we need to read it from configMap
      - name: get-config
        image: busybox
        command: ["/bin/sh"]
        args: ["-c","echo $GIT2CONSUL_CONFIG > /workdir/config.json; cat /workdir/config.json"]
        volumeMounts:
        - name: workdir
          mountPath: "/workdir"
        env:
        - name: GIT2CONSUL_CONFIG
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.configMapName }}
              key: git2consul.conf

      containers:
      # start git2consul using config.json fetched from initContainers
      - name: {{ .Values.name }}
        image: {{ .Values.img }}
        imagePullPolicy: {{ .Values.pullPolicy }}
        env:
        - name: SSH_KNOWN_HOSTS
          value: /workdir/known_hosts
        args: ["-config", "/workdir/config.json"]
        volumeMounts:
        - name: workdir
          mountPath: "/workdir"

      # consul agent - service discovery
      - name: consul-agent
        image: consul
        imagePullPolicy: {{ .Values.pullPolicy }}
        # need GOSSIP_KEY to join consul cluster
        env:
        - name: "GOSSIP_KEY"
          valueFrom:
            secretKeyRef:
              name: consul-join-key
              key: consul_key
        - name: CONSUL_LOCAL_CONFIG
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.configMapName }}
              key: consulagent.conf

        args: ["agent", "-join", "consul", "-encrypt", "$(GOSSIP_KEY)"]

      # Share directory between initContainers and runtimeContainers
      volumes:
      - name: workdir
        emptyDir: {}
